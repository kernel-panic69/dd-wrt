#
# Broadcom Linux Router Makefile
#
# Copyright 2001-2003, Broadcom Corporation
# All Rights Reserved.
#
# THIS SOFTWARE IS OFFERED "AS IS", AND BROADCOM GRANTS NO WARRANTIES OF ANY
# KIND, EXPRESS OR IMPLIED, BY STATUTE, COMMUNICATION OR OTHERWISE. BROADCOM
# SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A SPECIFIC PURPOSE OR NONINFRINGEMENT CONCERNING THIS SOFTWARE.
#
# $Id: Makefile,v 1.2 2005/09/26 11:06:58 seg Exp $
#

include .config
ifneq ($(wildcard ../cy_conf.mak),)
  include ../cy_conf.mak
endif

#
# Paths
#
OPENSER_MODULES := sl tm rr maxfwd usrloc registrar dbtext textops exec auth auth_db nathelper
OPENSER_MODULE_FILES := $(foreach module,$(OPENSER_MODULES),openser/modules/$(module)/$(module).so)
OPENSSL_NO_CIPHERS:= no-idea no-md2 no-mdc2 no-rc5 no-sha0 no-rmd160 no-aes192
OPENSSL_OPTIONS:= shared no-ec no-err no-fips no-hw no-krb5 no-threads zlib-dynamic

# Source bases

export PLATFORM LINUXDIR LIBDIR USRLIBDIR
export TOP := $(shell pwd)
export SRCBASE := $(shell (cd $(TOP)/.. && pwd -P))


# Set the HAL directory if you have the HAL sources

# Set the Atheros Rate Control directory if you have the proprietary rate control
export ATH_RATE=ath_rate/sample

#
# Cross-compile environment variables
#

# Build platform
export BUILD := i386-pc-linux-gnu
export HOSTCC := gcc

# uClibc wrapper
export ARCH:=$(PLATFORM)
ifeq ($(CONFIG_UCLIBC),y)
export PLATFORM := $(PLATFORM)-uclibc
endif


export KERNELRELEASE = $(shell cat $(LINUXDIR)/include/config/kernel.release 2> /dev/null)


#ifeq ($(PLATFORM),mipsel-uclibc)
export CROSS_COMPILE := $(ARCH)-linux-uclibc-
export CONFIGURE := ./configure $(ARCH)-linux --build=$(BUILD)
export TOOLCHAIN := $(shell cd $(dir $(shell which $(CROSS_COMPILE)gcc))/.. && pwd -P)
#endif


export BASEOPT:=-Os -fno-unwind-tables -fno-asynchronous-unwind-tables 


#ifeq ($(ARCH),arm)
#export COPTS:=$(BASEOPT) -pipe -march=armv7-a -mfpu=vfpv3-d16 -mfloat-abi=softfp -fhonour-copts -msoft-float
#export COPTS:=$(BASEOPT) -pipe -march=armv7-a -mtune=cortex-a9  -mfloat-abi=soft -fpic -fno-caller-saves 
export COPTS:=$(BASEOPT) -pipe -mcpu=cortex-a15 -mtune=cortex-a15 -mfpu=neon-vfpv4 -mfloat-abi=hard -fno-caller-saves -ffast-math -funsafe-math-optimizations -fcommon -ftree-vectorize -ftree-vectorizer-verbose=2 -fopt-info-vec -mvectorize-with-neon-quad
#export MIPS16_OPT:= -mthumb
#export THUMB:=-mthumb
#endif


#AGGRESSIVE_SIZE:=y

export CC := ccache $(CROSS_COMPILE)gcc
export CXX := ccache $(CROSS_COMPILE)g++
export AR := $(CROSS_COMPILE)gcc-ar
export AS := $(CROSS_COMPILE)as
export LD := $(CROSS_COMPILE)ld
export NM := $(CROSS_COMPILE)gcc-nm
export RANLIB := $(CROSS_COMPILE)gcc-ranlib
export STRIP := $(CROSS_COMPILE)strip
export SIZE := $(CROSS_COMPILE)size

export CFLAGS := $(COPTS) 

#
# Install and target directories
#

export PLATFORMDIR := $(TOP)/$(PLATFORM)
export INSTALLDIR := $(PLATFORMDIR)/install
export TARGETDIR := $(PLATFORMDIR)/target

#
# Configuration
#
CONFIG_IPTABLES=y
CONFIG_MUSL=y
#CONFIG_NOOPT=y

include rules/configs.mk

obj-clean := $(foreach obj,$(obj-y) $(obj-n),$(obj)-clean)
obj-install := $(foreach obj,$(obj-y),$(obj)-install)
obj-distclean := $(foreach obj,$(obj-y) $(obj-n),$(obj)-distclean)

all: install_headers build_date clean_target $(obj-y) $(LINUXDIR)/.config kernel

build_date:
	echo "#define BUILD_DATE \"$(shell date +%D)\"" > ../../opt/build.h 
	echo "CONFIG_MUSL=y" >> .config 

include kernel-features.mk

include common.mk

kernel:
	cp $(LINUXDIR)/.config_ipq806x $(LINUXDIR)/.config
ifeq ($(CONFIG_R7500),y)
	sed -i 's/\CONFIG_ARM_ATAG_DTB_COMPAT=y/# CONFIG_ARM_ATAG_DTB_COMPAT is not set/g' $(LINUXDIR)/.config
	sed -i 's/\# CONFIG_OPTIMIZE_INLINING is not set/CONFIG_OPTIMIZE_INLINING=y/g' $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_R7500v2),y)
	sed -i 's/\CONFIG_ARM_ATAG_DTB_COMPAT=y/# CONFIG_ARM_ATAG_DTB_COMPAT is not set/g' $(LINUXDIR)/.config
	sed -i 's/\# CONFIG_OPTIMIZE_INLINING is not set/CONFIG_OPTIMIZE_INLINING=y/g' $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_R7800),y)
	sed -i 's/\CONFIG_ARM_ATAG_DTB_COMPAT=y/# CONFIG_ARM_ATAG_DTB_COMPAT is not set/g' $(LINUXDIR)/.config
	sed -i 's/\# CONFIG_OPTIMIZE_INLINING is not set/CONFIG_OPTIMIZE_INLINING=y/g' $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_HABANERO),y)
ifneq ($(CONFIG_EA8300),y)
	sed -i 's/\# CONFIG_MTD_ROOTFS_SPLIT is not set/CONFIG_MTD_ROOTFS_SPLIT=y/g' $(LINUXDIR)/.config
	sed -i 's/\# CONFIG_MTD_UBI_GLUEBI is not set/CONFIG_MTD_UBI_GLUEBI=y/g' $(LINUXDIR)/.config
endif
endif
ifeq ($(CONFIG_EA8500),y)
	sed -i 's/\# CONFIG_ARM_ATAG_DTB_COMPAT is not set/CONFIG_ARM_ATAG_DTB_COMPAT=y/g' $(LINUXDIR)/.config
	echo "# CONFIG_ARM_ATAG_DTB_COMPAT_CMDLINE_FROM_BOOTLOADER is not set" >> $(LINUXDIR)/.config
	echo "CONFIG_ARM_ATAG_DTB_COMPAT_CMDLINE_EXTEND=y" >> $(LINUXDIR)/.config
	echo "# CONFIG_ARM_ATAG_DTB_COMPAT_CMDLINE_MANGLE is not set" >> $(LINUXDIR)/.config
	sed -i 's/\# CONFIG_OPTIMIZE_INLINING is not set/CONFIG_OPTIMIZE_INLINING=y/g' $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_EA8300),y)
	sed -i 's/\# CONFIG_ARM_ATAG_DTB_COMPAT is not set/CONFIG_ARM_ATAG_DTB_COMPAT=y/g' $(LINUXDIR)/.config
	echo "# CONFIG_ARM_ATAG_DTB_COMPAT_CMDLINE_FROM_BOOTLOADER is not set" >> $(LINUXDIR)/.config
	echo "CONFIG_ARM_ATAG_DTB_COMPAT_CMDLINE_EXTEND=y" >> $(LINUXDIR)/.config
	echo "# CONFIG_ARM_ATAG_DTB_COMPAT_CMDLINE_MANGLE is not set" >> $(LINUXDIR)/.config
	sed -i 's/\# CONFIG_AUTO_ZRELADDR is not set/CONFIG_AUTO_ZRELADDR=y/g' $(LINUXDIR)/.config
	echo "# CONFIG_EFI is not set" >> $(LINUXDIR)/.config
	sed -i 's/\# CONFIG_OPTIMIZE_INLINING is not set/CONFIG_OPTIMIZE_INLINING=y/g' $(LINUXDIR)/.config
endif

	$(kernelfeatures)
	$(MAKE) -C $(LINUXDIR) oldconfig
	$(MAKE) -f Makefile.ipq806x kernel-relink-prep MAKEEXT=ipq806x
	# we need to run this multiple times until all is resolved
	$(MAKE) -f Makefile.ipq806x kernel-relink MAKEEXT=ipq806x KBUILD_TARGETS="zImage dtbs"
	
#	$(MAKE) -C $(LINUXDIR)/tools/perf
	cp -fpR $(LINUXDIR)/arch/arm/boot/zImage $(ARCH)-uclibc/uImage; 
	-rm -rf $(ARCH)-uclibc/ipq806x;
	-mkdir -p $(ARCH)-uclibc/ipq806x;
	cp $(ARCH)-uclibc/uImage $(ARCH)-uclibc/ipq806x-R7500-uImage;
	cp $(ARCH)-uclibc/uImage $(ARCH)-uclibc/ipq806x-R7500v2-uImage;
	cp $(ARCH)-uclibc/uImage $(ARCH)-uclibc/ipq806x-R7800-uImage;
	cp $(ARCH)-uclibc/uImage $(ARCH)-uclibc/ipq806x-XR500-uImage;
	cp $(ARCH)-uclibc/uImage $(ARCH)-uclibc/ipq806x-TEW827-uImage;
	cp $(ARCH)-uclibc/uImage $(ARCH)-uclibc/ipq806x-G10-uImage;
	cp $(ARCH)-uclibc/uImage $(ARCH)-uclibc/ipq806x-EA8500-uImage;
	cat $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq8064-r7500.dtb >> $(ARCH)-uclibc/ipq806x-R7500-uImage;
	cat $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq8064-r7500v2.dtb >> $(ARCH)-uclibc/ipq806x-R7500v2-uImage;
	cat $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq8065-r7800.dtb >> $(ARCH)-uclibc/ipq806x-R7800-uImage;
	cat $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq8064-tew827.dtb >> $(ARCH)-uclibc/ipq806x-TEW827-uImage;
	cat $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq8064-ea8500.dtb >> $(ARCH)-uclibc/ipq806x-EA8500-uImage;
	cat $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq8064-asrockg10.dtb >> $(ARCH)-uclibc/ipq806x-G10-uImage;
	./tools/r7500/mkimage -A arm -O linux -T filesystem -C none -a 0x42208000 -e 0x42208000 -n 'DD-WRT - Fakeroot' -s $(ARCH)-uclibc/rootfs.dummy
	
	( dd if=$(ARCH)-uclibc/ipq806x-R7500-uImage of=$(ARCH)-uclibc/vmlinux-r7500.uImage.normal bs=4096k conv=sync; )
	
	( dd if=$(ARCH)-uclibc/vmlinux-r7500.uImage.normal bs=4194175 count=1 conv=sync of=$(ARCH)-uclibc/vmlinux-r7500.uImage.new; )
	
	( dd if=$(ARCH)-uclibc/ipq806x-R7500v2-uImage of=$(ARCH)-uclibc/vmlinux-r7500v2.uImage.normal bs=4096k conv=sync; )
	
	( dd if=$(ARCH)-uclibc/vmlinux-r7500v2.uImage.normal bs=4194175 count=1 conv=sync of=$(ARCH)-uclibc/vmlinux-r7500v2.uImage.new; )
	
	( dd if=$(ARCH)-uclibc/ipq806x-R7800-uImage of=$(ARCH)-uclibc/vmlinux-r7800.uImage.normal bs=4096k conv=sync; )
	
	( dd if=$(ARCH)-uclibc/vmlinux-r7800.uImage.normal bs=4194175 count=1 conv=sync of=$(ARCH)-uclibc/vmlinux-r7800.uImage.new; )

	( dd if=$(ARCH)-uclibc/ipq806x-XR500-uImage of=$(ARCH)-uclibc/vmlinux-xr500.uImage.normal bs=4096k conv=sync; )
	
	( dd if=$(ARCH)-uclibc/vmlinux-xr500.uImage.normal bs=4194175 count=1 conv=sync of=$(ARCH)-uclibc/vmlinux-xr500.uImage.new; )

	( dd if=$(ARCH)-uclibc/ipq806x-TEW827-uImage of=$(ARCH)-uclibc/vmlinux-TEW827.uImage.normal bs=4096k conv=sync; )
	
	( dd if=$(ARCH)-uclibc/vmlinux-TEW827.uImage.normal bs=4194175 count=1 conv=sync of=$(ARCH)-uclibc/vmlinux-TEW827.uImage.new; )

	( dd if=$(ARCH)-uclibc/ipq806x-G10-uImage of=$(ARCH)-uclibc/vmlinux-G10.uImage.normal bs=4096k conv=sync; )
	
	( dd if=$(ARCH)-uclibc/vmlinux-G10.uImage.normal bs=4194175 count=1 conv=sync of=$(ARCH)-uclibc/vmlinux-G10.uImage.new; )
	
	( dd if=$(ARCH)-uclibc/ipq806x-EA8500-uImage of=$(ARCH)-uclibc/vmlinux-EA8500.uImage.normal bs=4096k conv=sync; )
	
	( dd if=$(ARCH)-uclibc/vmlinux-EA8500.uImage.normal bs=4194175 count=1 conv=sync of=$(ARCH)-uclibc/vmlinux-EA8500.uImage.new; )	

	./tools/r7500/mkimage -A arm -O linux -C none -T kernel -a 0x42208000 -e 0x42208000 -n 'DD-WRT V3.0' -d $(ARCH)-uclibc/vmlinux-r7500.uImage.new $(ARCH)-uclibc/vmlinux-r7500.uImage.final
	
	./tools/r7500/mkimage -A arm -O linux -C none -T kernel -a 0x42208000 -e 0x42208000 -n 'DD-WRT V3.0' -d $(ARCH)-uclibc/vmlinux-r7500v2.uImage.new $(ARCH)-uclibc/vmlinux-r7500v2.uImage.final
	
	./tools/r7500/mkimage -A arm -O linux -C none -T kernel -a 0x42208000 -e 0x42208000 -n 'DD-WRT V3.0' -d $(ARCH)-uclibc/vmlinux-r7800.uImage.new $(ARCH)-uclibc/vmlinux-r7800.uImage.final

	./tools/r7500/mkimage -A arm -O linux -C none -T kernel -a 0x42208000 -e 0x42208000 -n 'DD-WRT V3.0' -d $(ARCH)-uclibc/vmlinux-TEW827.uImage.new $(ARCH)-uclibc/vmlinux-TEW827.uImage.final

	./tools/r7500/mkimage -A arm -O linux -C none -T kernel -a 0x42208000 -e 0x42208000 -n 'DD-WRT V3.0' -d $(ARCH)-uclibc/vmlinux-G10.uImage.new $(ARCH)-uclibc/vmlinux-G10.uImage.final
	
	./tools/r7500/mkimage -A arm -O linux -C none -T kernel -a 0x42208000 -e 0x42208000 -n 'DD-WRT V3.0' -d $(ARCH)-uclibc/vmlinux-EA8500.uImage.new $(ARCH)-uclibc/vmlinux-EA8500.uImage.final
	
	echo -ne '\xff' >> $(ARCH)-uclibc/vmlinux-r7500.uImage.final;
	cat $(ARCH)-uclibc/rootfs.dummy >> $(ARCH)-uclibc/vmlinux-r7500.uImage.final;
	
	echo -ne '\xff' >> $(ARCH)-uclibc/vmlinux-r7500v2.uImage.final;
	cat $(ARCH)-uclibc/rootfs.dummy >> $(ARCH)-uclibc/vmlinux-r7500v2.uImage.final;
	
	echo -ne '\xff' >> $(ARCH)-uclibc/vmlinux-r7800.uImage.final;
	cat $(ARCH)-uclibc/rootfs.dummy >> $(ARCH)-uclibc/vmlinux-r7800.uImage.final;

	echo -ne '\xff' >> $(ARCH)-uclibc/vmlinux-TEW827.uImage.final;
	cat $(ARCH)-uclibc/rootfs.dummy >> $(ARCH)-uclibc/vmlinux-TEW827.uImage.final;

	echo -ne '\xff' >> $(ARCH)-uclibc/vmlinux-G10.uImage.final;
	cat $(ARCH)-uclibc/rootfs.dummy >> $(ARCH)-uclibc/vmlinux-G10.uImage.final;
	
	echo -ne '\xff' >> $(ARCH)-uclibc/vmlinux-EA8500.uImage.final;
	cat $(ARCH)-uclibc/rootfs.dummy >> $(ARCH)-uclibc/vmlinux-EA8500.uImage.final;



its:
ifeq ($(CONFIG_ANTAIRA),y)
	-./tools/ipq40xx/mkits.sh -D 8dev_habanero-dvk-c2 -o $(ARCH)-uclibc/habanero.itb.its -k $(TOP)/$(ARCH)-uclibc/Image.gz -d $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq4019-ars7235-dvk-c2.dtb -C gzip -a 0x80208000 -e 0x80208000 -c "config@1" -A arm -v 4.9
else
	-./tools/ipq40xx/mkits.sh -D 8dev_habanero-dvk-c2 -o $(ARCH)-uclibc/habanero.itb.its -k $(TOP)/$(ARCH)-uclibc/Image.gz -d $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq4019-habanero-dvk-c2.dtb -C gzip -a 0x80208000 -e 0x80208000 -c "config@1" -A arm -v 4.9
endif
	gzip -f -9n -c $(LINUXDIR)/arch/arm/boot/Image > $(ARCH)-uclibc/Image.gz
	-./tools/r7500/mkimage -f $(ARCH)-uclibc/habanero.itb.its $(ARCH)-uclibc/habanero.itb.new

	cat $(LINUXDIR)/arch/arm/boot/Image | lzma e -si -so -eos -lc1 -lp2 -pb2 -d25 > $(ARCH)-uclibc/Image.lzma
	# padded kernel image size
	@SIZE=`wc -c $(ARCH)-uclibc/Image.lzma | awk '{print $$1}'`; \
		PAD=`expr 64 - $${SIZE} % 64` ; \
		dd if=/dev/zero count=1 bs=$${PAD} 2> /dev/null | tr \\000 \\377 >> $(ARCH)-uclibc/Image.lzma

	./tools/ipq40xx/mkits.sh -D qcom-ipq40xx-ap.dkxx -o $(TOP)/$(ARCH)-uclibc/fit-qcom-ipq40xx-ap.dkxx.its -k $(TOP)/$(ARCH)-uclibc/Image.lzma -d $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq4018-rt-ac58u.dtb -C lzma -a 0x80208000 -e 0x80208000 -c "config@1" -A arm -v 4.9
	./tools/asus/mkimage -f $(TOP)/$(ARCH)-uclibc/fit-qcom-ipq40xx-ap.dkxx.its $(TOP)/$(ARCH)-uclibc/asus-ac58u.img
	( dd if=$(ARCH)-uclibc/asus-ac58u.img of=$(ARCH)-uclibc/asus-ac58u.img.new bs=64k conv=sync; )
	cp -f $(ARCH)-uclibc/asus-ac58u.img.new $(ARCH)-uclibc/asus-ac58u.img

#	ISIZE=`wc -c $(ARCH)-uclibc/asus-ac58u.img | awk '{print $$1}'` ; \
#		PAD2=`expr $${ISIZE} - 64` ; \
#		( dd if=$(ARCH)-uclibc/asus-ac58u.img of=$(ARCH)-uclibc/asus-ac58u.img.new bs=$${PAD2} count=1 conv=sync; )		
#	cp -f $(ARCH)-uclibc/asus-ac58u.img.new $(ARCH)-uclibc/asus-ac58u.img

	cat $(TOP)/$(ARCH)-uclibc/root.squashfs.new >> $(ARCH)-uclibc/asus-ac58u.img
	#generate ASUS Image
	@ISIZE=`wc -c $(ARCH)-uclibc/asus-ac58u.img | awk '{print $$1}'` ; \
		KSIZE=`wc -c $(ARCH)-uclibc/Image.lzma | awk '{print $$1}'` ; \
		RSIZE=`wc -c $(ARCH)-uclibc/root.squashfs.new | awk '{print $$1}'` ; \
		PAD2=`expr $${ISIZE} - $${KSIZE} - $${RSIZE}` ; \
		RFSOFFSET=`expr 64 + $${KSIZE} + $${PAD2}` ; \
		echo "PAD2: $${PAD2} RFSOFFSET: $${RFSOFFSET}" ; \
	tools/asus/mkimage -A arm -O linux -T kernel -C lzma -a 0x80208000 -e 0x80208000 -r $${RFSOFFSET} \
			-n RT-AC58U -V "4.9" "0.4" "382" "52243-g06ac406" "0" "0" "0" "0" "0" "0" \
			-d $(TOP)/$(ARCH)-uclibc/asus-ac58u.img $(TOP)/$(ARCH)-uclibc/asus-ac58u.trx

	./tools/ubi/ubinize-image-new.sh --rootfs $(ARCH)-uclibc/root.squashfs.new \
		$(ARCH)-uclibc/ddwrt-ipq806x-EA8300-squashfs-nand-factory.ubi \
		-p 128KiB -m 2048 -E 5

	./tools/ipq40xx/mkits.sh -D linksys_ea8300 \
		    -o $(TOP)/$(ARCH)-uclibc/fit-linksys_ea8300.its \
		    -k $(TOP)/$(ARCH)-uclibc/uImage \
		    -d $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq4019-ea8300.dtb \
		    -C none -a 0x80208000 -e 0x80208000 -c "config@1" -A arm -v 4.9

	tools/r7500/mkimage -f $(TOP)/$(ARCH)-uclibc/fit-linksys_ea8300.its $(TOP)/$(ARCH)-uclibc/linksys_ea8300.itb
	dd if=$(TOP)/$(ARCH)-uclibc/linksys_ea8300.itb of=$(TOP)/$(ARCH)-uclibc/linksys_ea8300.bin bs=5120k conv=sync
	cat $(ARCH)-uclibc/ddwrt-ipq806x-EA8300-squashfs-nand-factory.ubi >> $(TOP)/$(ARCH)-uclibc/linksys_ea8300.bin
	let size="$$(stat -c%s arm-uclibc/linksys_ea8300.bin)" pad="2048" offset="256" pad="(pad - ((size + offset) % pad)) % pad"; dd if=/dev/zero bs=$$pad count=1 | tr '\000' '\377' >> $(TOP)/$(ARCH)-uclibc/linksys_ea8300.bin
	printf ".LINKSYS.01000409%-15s%08X%-8s%-16s" "EA8300" "$$(cksum arm-uclibc/linksys_ea8300.bin | cut -d ' ' -f1)" "0" "K0000000F0246434" >> $(TOP)/$(ARCH)-uclibc/linksys_ea8300.bin
	dd if=/dev/zero bs=192 count=1 >> $(TOP)/$(ARCH)-uclibc/linksys_ea8300.bin


#	-./tools/ipq40xx/mkits.sh -D asus_ac56u -o $(ARCH)-uclibc/ac58u.itb.its -k $(TOP)/$(ARCH)-uclibc/Image.gz -d $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq4018-asus-ac58u.dtb -C gzip -a 0x80208000 -e 0x80208000 -c "config@1" -A arm -v 4.9

install package: clean_target $(filter-out lib.$(ARCH)-install,$(obj-install)) $(LINUXDIR)/.config
        # Install binaries into target directory
	install -d $(TARGETDIR)
	for dir in $(wildcard $(patsubst %,$(INSTALLDIR)/%,$(obj-y))) ; do \
	    (cd $${dir} && tar cpf - .) | (cd $(TARGETDIR) && tar xpf -) \
	done
	mkdir -p $(ARCH)-uclibc/target/etc/config
	mkdir -p $(ARCH)-uclibc/target/etc/kaid
	mkdir -p $(ARCH)-uclibc/target/etc/langpack
	cd  $(ARCH)-uclibc/target/lib
	cp ./opt/etc/config/* $(ARCH)-uclibc/target/etc/config
	cp ./opt/usr/lib/smb.conf $(ARCH)-uclibc/target/usr/lib
	# optimize the others library by removing unneeded symbols
	$(MAKE) -f Makefile.ipq806x optimize-lib
	# Install modules into filesystem
	if grep -q "CONFIG_MODULES=y" $(LINUXDIR)/.config ; then \
	    $(MAKE) -C $(LINUXDIR) modules_install DEPMOD=/bin/true INSTALL_MOD_PATH=$(TARGETDIR) ; \
	fi
ifeq ($(CONFIG_MADWIFI),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wl
endif


ifneq ($(CONFIG_SAMBA),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/cifs
endif
	rm -f $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/build
	rm -f $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/source
        # Prepare filesystem
        # Make sure mksquashfs-2.0 is used
	cd $(TARGETDIR)  &&  find . -iname "CVS" | xargs rm -rf
	cd $(TARGETDIR)  &&  find . -iname ".svn" | xargs rm -rf

	find $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel -name *.ko -exec mv {} $(TARGETDIR)/lib/modules/$(KERNELRELEASE) \;
	-find $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/net -name *.ko -exec mv {} $(TARGETDIR)/lib/modules/$(KERNELRELEASE) \;
	-find $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/extra -name *.ko -exec mv {} $(TARGETDIR)/lib/modules/$(KERNELRELEASE) \;
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/net
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/extra
	#e2fsck -y -f $(ARCH)-uclibc/root.fs
	./busybox/examples/depmod.pl -F $(LINUXDIR)/System.map -b $(ARCH)-uclibc/target/lib/modules
	#xz -z -T 0 --arm -e $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/*.ko
#	tar --directory=$(TARGETDIR) --remove-files -cvvjf $(TARGETDIR)/etc/local.tar.bz2 usr/local
	rm -rf $(TARGETDIR)/usr/local
	mkdir $(TARGETDIR)/usr/local
	
	
ifeq ($(CONFIG_KAID),y)
	cp kaid/kaid $(TARGETDIR)/usr/sbin
endif
#	mv $(TARGETDIR)/usr/lib/services.so $(TARGETDIR)/lib

	export STRIP_KMOD="$(LINUXDIR)/scripts/strip-kmod.sh" && \
	export STRIP="$(TOP)/sstrip/sstrip -z" && \
	$(LINUXDIR)/scripts/rstrip.sh $(TARGETDIR)
	cd $(TARGETDIR) && $(TOP)/misc/rootprep.sh
	#mkdir $(TARGETDIR)/boot
	
	
	
	cp -fpR $(LINUXDIR)/arch/arm/boot/zImage $(ARCH)-uclibc/uImage; 
	-rm -rf $(ARCH)-uclibc/ipq806x;
	-mkdir -p $(ARCH)-uclibc/ipq806x;
	cp $(ARCH)-uclibc/uImage $(ARCH)-uclibc/ipq806x-R7500-uImage;
	cp $(ARCH)-uclibc/uImage $(ARCH)-uclibc/ipq806x-R7500v2-uImage;
	cp $(ARCH)-uclibc/uImage $(ARCH)-uclibc/ipq806x-R7800-uImage;
	cp $(ARCH)-uclibc/uImage $(ARCH)-uclibc/ipq806x-XR500-uImage;
	cp $(ARCH)-uclibc/uImage $(ARCH)-uclibc/ipq806x-TEW827-uImage;
	cp $(ARCH)-uclibc/uImage $(ARCH)-uclibc/ipq806x-G10-uImage;
	cp $(ARCH)-uclibc/uImage $(ARCH)-uclibc/ipq806x-EA8500-uImage;
	cat $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq8064-r7500.dtb >> $(ARCH)-uclibc/ipq806x-R7500-uImage;
	cat $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq8064-r7500v2.dtb >> $(ARCH)-uclibc/ipq806x-R7500v2-uImage;
	cat $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq8065-r7800.dtb >> $(ARCH)-uclibc/ipq806x-R7800-uImage;
	cat $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq8065-xr500.dtb >> $(ARCH)-uclibc/ipq806x-XR500-uImage;
	cat $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq8064-tew827.dtb >> $(ARCH)-uclibc/ipq806x-TEW827-uImage;
	cat $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq8064-ea8500.dtb >> $(ARCH)-uclibc/ipq806x-EA8500-uImage;
	cat $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq8064-asrockg10.dtb >> $(ARCH)-uclibc/ipq806x-G10-uImage;
#	$(LINUXDIR)/scripts/squashfs/mksquashfs4 $(ARCH)-uclibc/target $(ARCH)-uclibc/root.squashfs -comp xz -sort tools/sort.txt -nopad  -root-owned -noappend -Xbcj arm,armthumb,arm64,x86,powerpc,ia64,riscv,delta,delta-2,delta-3,delta-4,delta-8,delta-16 -b 262144
	$(LINUXDIR)/scripts/squashfs/mksquashfs4 $(ARCH)-uclibc/target $(ARCH)-uclibc/root.squashfs -comp xz -sort tools/sort.txt -nopad  -root-owned -noappend -Xbcj arm -b 262144
#	$(LINUXDIR)/scripts/squashfs/mksquashfs-lzma $(ARCH)-uclibc/target $(ARCH)-uclibc/root.squashfs -noappend -root-owned -le
	
	( dd if=$(ARCH)-uclibc/root.squashfs of=$(ARCH)-uclibc/root.squashfs.new bs=2k conv=sync; )

	./tools/r7500/mkimage -A arm -O linux -T filesystem -C none -a 0x42208000 -e 0x42208000 -n 'DD-WRT - Fakeroot' -s $(ARCH)-uclibc/rootfs.dummy


	( dd if=$(ARCH)-uclibc/ipq806x-R7500-uImage of=$(ARCH)-uclibc/vmlinux-r7500.uImage.normal bs=4096k conv=sync; )
	
	( dd if=$(ARCH)-uclibc/vmlinux-r7500.uImage.normal bs=4194175 count=1 conv=sync of=$(ARCH)-uclibc/vmlinux-r7500.uImage.new; )
	
	( dd if=$(ARCH)-uclibc/ipq806x-R7500v2-uImage of=$(ARCH)-uclibc/vmlinux-r7500v2.uImage.normal bs=4096k conv=sync; )
	
	( dd if=$(ARCH)-uclibc/vmlinux-r7500v2.uImage.normal bs=4194175 count=1 conv=sync of=$(ARCH)-uclibc/vmlinux-r7500v2.uImage.new; )
	
	( dd if=$(ARCH)-uclibc/ipq806x-R7800-uImage of=$(ARCH)-uclibc/vmlinux-r7800.uImage.normal bs=4096k conv=sync; )
	
	( dd if=$(ARCH)-uclibc/vmlinux-r7800.uImage.normal bs=4194175 count=1 conv=sync of=$(ARCH)-uclibc/vmlinux-r7800.uImage.new; )

	( dd if=$(ARCH)-uclibc/ipq806x-XR500-uImage of=$(ARCH)-uclibc/vmlinux-xr500.uImage.normal bs=4096k conv=sync; )
	
	( dd if=$(ARCH)-uclibc/vmlinux-xr500.uImage.normal bs=4194175 count=1 conv=sync of=$(ARCH)-uclibc/vmlinux-xr500.uImage.new; )

	( dd if=$(ARCH)-uclibc/ipq806x-TEW827-uImage of=$(ARCH)-uclibc/vmlinux-TEW827.uImage.normal bs=4096k conv=sync; )
	
	( dd if=$(ARCH)-uclibc/vmlinux-TEW827.uImage.normal bs=4194175 count=1 conv=sync of=$(ARCH)-uclibc/vmlinux-TEW827.uImage.new; )

	( dd if=$(ARCH)-uclibc/ipq806x-G10-uImage of=$(ARCH)-uclibc/vmlinux-G10.uImage.normal bs=4096k conv=sync; )
	
	( dd if=$(ARCH)-uclibc/vmlinux-G10.uImage.normal bs=4194175 count=1 conv=sync of=$(ARCH)-uclibc/vmlinux-G10.uImage.new; )
	
	( dd if=$(ARCH)-uclibc/ipq806x-EA8500-uImage of=$(ARCH)-uclibc/vmlinux-EA8500.uImage.normal bs=4096k conv=sync; )
	
	( dd if=$(ARCH)-uclibc/vmlinux-EA8500.uImage.normal bs=4194175 count=1 conv=sync of=$(ARCH)-uclibc/vmlinux-EA8500.uImage.new; )	

	./tools/r7500/mkimage -A arm -O linux -C none -T kernel -a 0x42208000 -e 0x42208000 -n 'DD-WRT V3.0' -d $(ARCH)-uclibc/vmlinux-r7500.uImage.new $(ARCH)-uclibc/vmlinux-r7500.uImage.final
	
	./tools/r7500/mkimage -A arm -O linux -C none -T kernel -a 0x42208000 -e 0x42208000 -n 'DD-WRT V3.0' -d $(ARCH)-uclibc/vmlinux-r7500v2.uImage.new $(ARCH)-uclibc/vmlinux-r7500v2.uImage.final
	
	./tools/r7500/mkimage -A arm -O linux -C none -T kernel -a 0x42208000 -e 0x42208000 -n 'DD-WRT V3.0' -d $(ARCH)-uclibc/vmlinux-r7800.uImage.new $(ARCH)-uclibc/vmlinux-r7800.uImage.final

	./tools/r7500/mkimage -A arm -O linux -C none -T kernel -a 0x42208000 -e 0x42208000 -n 'DD-WRT V3.0' -d $(ARCH)-uclibc/vmlinux-xr500.uImage.new $(ARCH)-uclibc/vmlinux-xr500.uImage.final

	./tools/r7500/mkimage -A arm -O linux -C none -T kernel -a 0x42208000 -e 0x42208000 -n 'DD-WRT V3.0' -d $(ARCH)-uclibc/vmlinux-TEW827.uImage.new $(ARCH)-uclibc/vmlinux-TEW827.uImage.final

	./tools/r7500/mkimage -A arm -O linux -C none -T kernel -a 0x42208000 -e 0x42208000 -n 'DD-WRT V3.0' -d $(ARCH)-uclibc/vmlinux-G10.uImage.new $(ARCH)-uclibc/vmlinux-G10.uImage.final
	
	./tools/r7500/mkimage -A arm -O linux -C none -T kernel -a 0x42208000 -e 0x42208000 -n 'DD-WRT V3.0' -d $(ARCH)-uclibc/vmlinux-EA8500.uImage.new $(ARCH)-uclibc/vmlinux-EA8500.uImage.final
	
	echo -ne '\xff' >> $(ARCH)-uclibc/vmlinux-r7500.uImage.final;
	cat $(ARCH)-uclibc/rootfs.dummy >> $(ARCH)-uclibc/vmlinux-r7500.uImage.final;
	
	echo -ne '\xff' >> $(ARCH)-uclibc/vmlinux-r7500v2.uImage.final;
	cat $(ARCH)-uclibc/rootfs.dummy >> $(ARCH)-uclibc/vmlinux-r7500v2.uImage.final;
	
	echo -ne '\xff' >> $(ARCH)-uclibc/vmlinux-r7800.uImage.final;
	cat $(ARCH)-uclibc/rootfs.dummy >> $(ARCH)-uclibc/vmlinux-r7800.uImage.final;

	echo -ne '\xff' >> $(ARCH)-uclibc/vmlinux-xr500.uImage.final;
	cat $(ARCH)-uclibc/rootfs.dummy >> $(ARCH)-uclibc/vmlinux-xr500.uImage.final;

	echo -ne '\xff' >> $(ARCH)-uclibc/vmlinux-TEW827.uImage.final;
	cat $(ARCH)-uclibc/rootfs.dummy >> $(ARCH)-uclibc/vmlinux-TEW827.uImage.final;

	echo -ne '\xff' >> $(ARCH)-uclibc/vmlinux-G10.uImage.final;
	cat $(ARCH)-uclibc/rootfs.dummy >> $(ARCH)-uclibc/vmlinux-G10.uImage.final;
	
	echo -ne '\xff' >> $(ARCH)-uclibc/vmlinux-EA8500.uImage.final;
	cat $(ARCH)-uclibc/rootfs.dummy >> $(ARCH)-uclibc/vmlinux-EA8500.uImage.final;
	
	
	( dd if=$(ARCH)-uclibc/vmlinux-r7500.uImage.final bs=4096k conv=sync count=1; dd if=$(ARCH)-uclibc/root.squashfs.new bs=64k; ) > $(ARCH)-uclibc/ddwrt-R7500v1.bin
	
	( dd if=$(ARCH)-uclibc/vmlinux-r7500v2.uImage.final bs=4096k conv=sync count=1; dd if=$(ARCH)-uclibc/root.squashfs.new bs=64k; ) > $(ARCH)-uclibc/ddwrt-R7500v2.bin
	
	( dd if=$(ARCH)-uclibc/vmlinux-r7800.uImage.final bs=4096k conv=sync count=1; dd if=$(ARCH)-uclibc/root.squashfs.new bs=64k; ) > $(ARCH)-uclibc/ddwrt-R7800.bin

	( dd if=$(ARCH)-uclibc/vmlinux-xr500.uImage.final bs=4096k conv=sync count=1; dd if=$(ARCH)-uclibc/root.squashfs.new bs=64k; ) > $(ARCH)-uclibc/ddwrt-XR500.bin

	( dd if=$(ARCH)-uclibc/vmlinux-TEW827.uImage.final bs=4096k conv=sync count=1; dd if=$(ARCH)-uclibc/root.squashfs.new bs=64k; ) > $(ARCH)-uclibc/ddwrt-TEW827.bin

	( dd if=$(ARCH)-uclibc/vmlinux-G10.uImage.final bs=4096k conv=sync count=1; dd if=$(ARCH)-uclibc/root.squashfs.new bs=64k; ) > $(ARCH)-uclibc/ddwrt-G10.bin
	
	( dd if=$(ARCH)-uclibc/vmlinux-EA8500.uImage.final bs=4194304 conv=sync count=1; dd if=$(ARCH)-uclibc/root.squashfs.new bs=64k; ) > $(ARCH)-uclibc/ddwrt-EA8500.bin
	
	cp $(ARCH)-uclibc/ddwrt-EA8500.bin $(ARCH)-uclibc/ddwrt-EA8500-WW.bin
	cat tools/ea8500/ea8500.tag >> $(ARCH)-uclibc/ddwrt-EA8500.bin
	cp $(ARCH)-uclibc/ddwrt-EA8500.bin $(ARCH)-uclibc/EA8500-factory-to-ddwrt.img
	cat tools/ea8500/ea8500WW.tag >> $(ARCH)-uclibc/ddwrt-EA8500-WW.bin
	cp $(ARCH)-uclibc/ddwrt-EA8500-WW.bin $(ARCH)-uclibc/EA8500WW-factory-to-ddwrt.img
	
	#beware max image size is 24MB
	./tools/r7500/mkdniimg -B R7500 -v 1.0.0.94 -r "" -H "29764841+0+128+256+3x3+4x4" -i $(ARCH)-uclibc/ddwrt-R7500v1.bin -o $(ARCH)-uclibc/R7500v1-factory-to-ddwrt.img
	#beware max image size is 24MB
	./tools/r7500/mkdniimg -B R7500v2 -v V1.0.2.4 -r "" -H "29764958+0+128+512+3x3+4x4" -i $(ARCH)-uclibc/ddwrt-R7500v2.bin -o $(ARCH)-uclibc/R7500v2-factory-to-ddwrt.img
	#beware max image size is 29MB
	./tools/r7500/mkdniimg -B R7800 -v 1.0.2.05 -r "" -H "29764958+0+128+512+4x4+4x4+cascade" -i $(ARCH)-uclibc/ddwrt-R7800.bin -o $(ARCH)-uclibc/R7800-factory-to-ddwrt.img
	#beware max image size is 29MB
	./tools/r7500/mkdniimg -B XR500 -v 2.3.2.500 -r "" -H "29764958+0+256+512+4x4+4x4+cascade" -i $(ARCH)-uclibc/ddwrt-XR500.bin -o $(ARCH)-uclibc/XR500-factory-to-ddwrt.img
	#beware max image size is 29MB
	./tools/r7500/mkdniimg -B XR450 -v 2.3.2.500 -r "" -H "29764958+0+256+512+4x4+4x4+cascade" -i $(ARCH)-uclibc/ddwrt-XR500.bin -o $(ARCH)-uclibc/XR450-factory-to-ddwrt.img

	./tools/ubi/ubinize-image.sh --kernel $(ARCH)-uclibc/vmlinux-TEW827.uImage.final \
		$(ARCH)-uclibc/root.squashfs.new \
		$(ARCH)-uclibc/ddwrt-ipq806x-TEW827-squashfs-nand-factory.ubi \
		-v -p 128KiB -m 2048 -s 512 -O 2048

	./tools/ubi/ubinize-image.sh --kernel $(ARCH)-uclibc/vmlinux-G10.uImage.final \
		$(ARCH)-uclibc/root.squashfs.new \
		$(ARCH)-uclibc/ddwrt-ipq806x-G10-squashfs-nand-factory.ubi \
		-v -p 128KiB -m 2048 -s 512 -O 2048
	
	./tools/ubi/ubinize-image.sh --kernel $(ARCH)-uclibc/vmlinux-EA8500.uImage.final \
		$(ARCH)-uclibc/root.squashfs.new \
		$(ARCH)-uclibc/ddwrt-ipq806x-EA8500-squashfs-nand-factory.ubi \
		-v -p 128KiB -m 2048

	./tools/ubi/ubinize-image-new.sh --rootfs $(ARCH)-uclibc/root.squashfs.new \
		$(ARCH)-uclibc/ddwrt-ipq806x-EA8300-squashfs-nand-factory.ubi \
		-p 128KiB -m 2048 -E 5

#	cd $(ARCH)-uclibc && ../tools/wrt1900ac/ubinize -v -m 2048 -p 128KiB -s 512 -O 2048 -o root.squashfs.ubi ubinize.cfg && cd ..

#	dd if=$(ARCH)-uclibc/ddwrt-ipq806x-AP148-squashfs-nand-factory.ubi of=$(ARCH)-uclibc/ddwrt-ipq806x-AP148-squashfs-nand-factory-final.ubi bs=2M conv=sync
	cp $(ARCH)-uclibc/ddwrt-ipq806x-TEW827-squashfs-nand-factory.ubi $(ARCH)-uclibc/ddwrt-tew827-squashfs-nand-factory.ubi

	cp $(ARCH)-uclibc/ddwrt-ipq806x-G10-squashfs-nand-factory.ubi $(ARCH)-uclibc/ddwrt-g10-squashfs-nand-factory.ubi
	
	cp $(ARCH)-uclibc/ddwrt-ipq806x-EA8500-squashfs-nand-factory.ubi $(ARCH)-uclibc/ddwrt-ea8500-squashfs-nand-factory.ubi
ifeq ($(CONFIG_ANTAIRA),y)
	-./tools/ipq40xx/mkits.sh -D 8dev_habanero-dvk-c2 -o $(ARCH)-uclibc/habanero.itb.its -k $(TOP)/$(ARCH)-uclibc/Image.lzma -d $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq4019-ars7235-dvk-c2.dtb -C lzma -a 0x80208000 -e 0x80208000 -c "config@1" -A arm -v 4.9
else
	-./tools/ipq40xx/mkits.sh -D 8dev_habanero-dvk-c2 -o $(ARCH)-uclibc/habanero.itb.its -k $(TOP)/$(ARCH)-uclibc/Image.lzma -d $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq4019-habanero-dvk-c2.dtb -C lzma -a 0x80208000 -e 0x80208000 -c "config@1" -A arm -v 4.9
endif
	cat $(LINUXDIR)/arch/arm/boot/Image | lzma e -si -so -eos -lc1 -lp2 -pb2 -d25 > $(ARCH)-uclibc/Image.lzma
	gzip -f -9n -c $(LINUXDIR)/arch/arm/boot/Image > $(ARCH)-uclibc/Image.gz
	-./tools/r7500/mkimage -f $(ARCH)-uclibc/habanero.itb.its $(ARCH)-uclibc/habanero.itb.new

	-( dd if=$(ARCH)-uclibc/habanero.itb.new bs=4096k conv=sync count=1; dd if=$(ARCH)-uclibc/root.squashfs.new bs=64k; ) > $(ARCH)-uclibc/habanero.image

	--./tools/trx_n -m 60000000 -o $(ARCH)-uclibc/habanero.bin $(ARCH)-uclibc/habanero.image
	-./tools/trx_n -m 60000000 -o $(ARCH)-uclibc/ddwrt-netgear-R7500v1.bin $(ARCH)-uclibc/ddwrt-R7500v1.bin 
	-./tools/trx_n -m 60000000 -o $(ARCH)-uclibc/ddwrt-netgear-R7500v2.bin $(ARCH)-uclibc/ddwrt-R7500v2.bin
	-./tools/trx_n -m 60000000 -o $(ARCH)-uclibc/ddwrt-netgear-R7800.bin $(ARCH)-uclibc/ddwrt-R7800.bin
	-./tools/trx_n -m 60000000 -o $(ARCH)-uclibc/ddwrt-netgear-XR500.bin $(ARCH)-uclibc/ddwrt-XR500.bin
	-./tools/trx_n -m 60000000 -o $(ARCH)-uclibc/ddwrt-trendnet-tew827.bin $(ARCH)-uclibc/ddwrt-ipq806x-TEW827-squashfs-nand-factory.ubi
	-./tools/trx_n -m 60000000 -o $(ARCH)-uclibc/ddwrt-asrock-g10.bin $(ARCH)-uclibc/ddwrt-ipq806x-G10-squashfs-nand-factory.ubi
	-./tools/trx_n -m 60000000 -o $(ARCH)-uclibc/ddwrt-Linksys-EA8500.bin $(ARCH)-uclibc/ddwrt-EA8500.bin
	
	cd tools && ./r7500/mkimage -f sysupgrade-ubi.its $(TOP)/$(ARCH)-uclibc/tew827-upgrade.bin
	cat tools/tew827.tag >> $(ARCH)-uclibc/tew827-upgrade.bin

	tools/cvimg/cvimg csys $(ARCH)-uclibc/ddwrt-ipq806x-G10-squashfs-nand-factory.ubi $(ARCH)-uclibc/ddwrt-g10.img 0x1200000 0x70000 RN67

ifeq ($(CONFIG_HABANERO),y)
	cat $(LINUXDIR)/arch/arm/boot/Image | lzma e -si -so -eos -lc1 -lp2 -pb2 -d25 > $(ARCH)-uclibc/Image.lzma
	# padded kernel image size
	@SIZE=`wc -c $(ARCH)-uclibc/Image.lzma | awk '{print $$1}'`; \
		PAD=`expr 64 - $${SIZE} % 64` ; \
		dd if=/dev/zero count=1 bs=$${PAD} 2> /dev/null | tr \\000 \\377 >> $(ARCH)-uclibc/Image.lzma

	./tools/ipq40xx/mkits.sh -D qcom-ipq40xx-ap.dkxx -o $(TOP)/$(ARCH)-uclibc/fit-qcom-ipq40xx-ap.dkxx.its -k $(TOP)/$(ARCH)-uclibc/Image.lzma -d $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq4018-rt-ac58u.dtb -C lzma -a 0x80208000 -e 0x80208000 -c "config@1" -A arm -v 4.9
	./tools/asus/mkimage -f $(TOP)/$(ARCH)-uclibc/fit-qcom-ipq40xx-ap.dkxx.its $(TOP)/$(ARCH)-uclibc/asus-ac58u.img
	( dd if=$(ARCH)-uclibc/asus-ac58u.img of=$(ARCH)-uclibc/asus-ac58u.img.new bs=64k conv=sync; )
	cp -f $(ARCH)-uclibc/asus-ac58u.img.new $(ARCH)-uclibc/asus-ac58u.img

#	ISIZE=`wc -c $(ARCH)-uclibc/asus-ac58u.img | awk '{print $$1}'` ; \
#		PAD2=`expr $${ISIZE} - 64` ; \
#		( dd if=$(ARCH)-uclibc/asus-ac58u.img of=$(ARCH)-uclibc/asus-ac58u.img.new bs=$${PAD2} count=1 conv=sync; )		
#	cp -f $(ARCH)-uclibc/asus-ac58u.img.new $(ARCH)-uclibc/asus-ac58u.img

	cat $(TOP)/$(ARCH)-uclibc/root.squashfs.new >> $(ARCH)-uclibc/asus-ac58u.img
	#generate ASUS Image
	@ISIZE=`wc -c $(ARCH)-uclibc/asus-ac58u.img | awk '{print $$1}'` ; \
		KSIZE=`wc -c $(ARCH)-uclibc/Image.lzma | awk '{print $$1}'` ; \
		RSIZE=`wc -c $(ARCH)-uclibc/root.squashfs.new | awk '{print $$1}'` ; \
		PAD2=`expr $${ISIZE} - $${KSIZE} - $${RSIZE}` ; \
		RFSOFFSET=`expr 64 + $${KSIZE} + $${PAD2}` ; \
		echo "PAD2: $${PAD2} RFSOFFSET: $${RFSOFFSET}" ; \
	tools/asus/mkimage -A arm -O linux -T kernel -C lzma -a 0x80208000 -e 0x80208000 -r $${RFSOFFSET} \
			-n RT-AC58U -V "4.9" "0.4" "382" "52243-g06ac406" "0" "0" "0" "0" "0" "0" \
			-d $(TOP)/$(ARCH)-uclibc/asus-ac58u.img $(TOP)/$(ARCH)-uclibc/asus-ac58u.trx

	-./tools/trx_n -m 60000000 -o $(ARCH)-uclibc/ac58.bin $(ARCH)-uclibc/asus-ac58u.img

	./tools/ipq40xx/mkits.sh -D linksys_ea8300 \
		    -o $(TOP)/$(ARCH)-uclibc/fit-linksys_ea8300.its \
		    -k $(TOP)/$(ARCH)-uclibc/uImage \
		    -d $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq4019-ea8300.dtb \
		    -C none -a 0x80208000 -e 0x80208000 -c "config@1" -A arm -v 4.9

	tools/r7500/mkimage -f $(TOP)/$(ARCH)-uclibc/fit-linksys_ea8300.its $(TOP)/$(ARCH)-uclibc/linksys_ea8300.itb
	dd if=$(TOP)/$(ARCH)-uclibc/linksys_ea8300.itb of=$(TOP)/$(ARCH)-uclibc/linksys_ea8300.bin bs=5120k conv=sync
	cat $(ARCH)-uclibc/ddwrt-ipq806x-EA8300-squashfs-nand-factory.ubi >> $(TOP)/$(ARCH)-uclibc/linksys_ea8300.bin
	let size="$$(stat -c%s arm-uclibc/linksys_ea8300.bin)" pad="2048" offset="256" pad="(pad - ((size + offset) % pad)) % pad"; dd if=/dev/zero bs=$$pad count=1 | tr '\000' '\377' >> $(TOP)/$(ARCH)-uclibc/linksys_ea8300.bin
	printf ".LINKSYS.01000409%-15s%08X%-8s%-16s" "EA8300" "$$(cksum arm-uclibc/linksys_ea8300.bin | cut -d ' ' -f1)" "0" "K0000000F0246434" >> $(TOP)/$(ARCH)-uclibc/linksys_ea8300.bin
	dd if=/dev/zero bs=192 count=1 >> $(TOP)/$(ARCH)-uclibc/linksys_ea8300.bin

	-./tools/trx_n -m 60000000 -o $(ARCH)-uclibc/linksys_ea8300-webflash.bin $(ARCH)-uclibc/linksys_ea8300.bin


	./tools/ipq40xx/mkits.sh -D linksys_mr8300 \
		    -o $(TOP)/$(ARCH)-uclibc/fit-linksys_mr8300.its \
		    -k $(TOP)/$(ARCH)-uclibc/uImage \
		    -d $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq4019-mr8300.dtb \
		    -C none -a 0x80208000 -e 0x80208000 -c "config@1" -A arm -v 4.9

	tools/r7500/mkimage -f $(TOP)/$(ARCH)-uclibc/fit-linksys_mr8300.its $(TOP)/$(ARCH)-uclibc/linksys_mr8300.itb
	dd if=$(TOP)/$(ARCH)-uclibc/linksys_mr8300.itb of=$(TOP)/$(ARCH)-uclibc/linksys_mr8300.bin bs=5120k conv=sync
	cat $(ARCH)-uclibc/ddwrt-ipq806x-EA8300-squashfs-nand-factory.ubi >> $(TOP)/$(ARCH)-uclibc/linksys_mr8300.bin
	let size="$$(stat -c%s arm-uclibc/linksys_mr8300.bin)" pad="2048" offset="256" pad="(pad - ((size + offset) % pad)) % pad"; dd if=/dev/zero bs=$$pad count=1 | tr '\000' '\377' >> $(TOP)/$(ARCH)-uclibc/linksys_mr8300.bin
	printf ".LINKSYS.01000409%-15s%08X%-8s%-16s" "MR8300" "$$(cksum arm-uclibc/linksys_mr8300.bin | cut -d ' ' -f1)" "0" "K0000000F0246434" >> $(TOP)/$(ARCH)-uclibc/linksys_mr8300.bin
	dd if=/dev/zero bs=192 count=1 >> $(TOP)/$(ARCH)-uclibc/linksys_mr8300.bin

	-./tools/trx_n -m 60000000 -o $(ARCH)-uclibc/linksys_mr8300-webflash.bin $(ARCH)-uclibc/linksys_mr8300.bin


	./tools/ipq40xx/mkits.sh -D linksys_mr9000 \
		    -o $(TOP)/$(ARCH)-uclibc/fit-linksys_mr9000.its \
		    -k $(TOP)/$(ARCH)-uclibc/uImage \
		    -d $(LINUXDIR)/arch/arm/boot/dts/qcom-ipq4019-mr9000.dtb \
		    -C none -a 0x80208000 -e 0x80208000 -c "config@1" -A arm -v 4.9

	tools/r7500/mkimage -f $(TOP)/$(ARCH)-uclibc/fit-linksys_mr9000.its $(TOP)/$(ARCH)-uclibc/linksys_mr9000.itb
	dd if=$(TOP)/$(ARCH)-uclibc/linksys_mr9000.itb of=$(TOP)/$(ARCH)-uclibc/linksys_mr9000.bin bs=5120k conv=sync
	cat $(ARCH)-uclibc/ddwrt-ipq806x-EA8300-squashfs-nand-factory.ubi >> $(TOP)/$(ARCH)-uclibc/linksys_mr9000.bin
	let size="$$(stat -c%s arm-uclibc/linksys_mr9000.bin)" pad="2048" offset="256" pad="(pad - ((size + offset) % pad)) % pad"; dd if=/dev/zero bs=$$pad count=1 | tr '\000' '\377' >> $(TOP)/$(ARCH)-uclibc/linksys_mr9000.bin
	printf ".LINKSYS.01000409%-15s%08X%-8s%-16s" "MR9000" "$$(cksum arm-uclibc/linksys_mr9000.bin | cut -d ' ' -f1)" "0" "K0000000F0246434" >> $(TOP)/$(ARCH)-uclibc/linksys_mr9000.bin
	dd if=/dev/zero bs=192 count=1 >> $(TOP)/$(ARCH)-uclibc/linksys_mr9000.bin

	-./tools/trx_n -m 60000000 -o $(ARCH)-uclibc/linksys_mr9000-webflash.bin $(ARCH)-uclibc/linksys_mr9000.bin

endif

include rules/all.mk

.PHONY: all clean distclean mrproper install package
.PHONY: conf mconf oldconf kconf kmconf config menuconfig oldconfig
.PHONY: dummy fixkc libnet libpcap



